{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nlet ProgrammaService = (_class = class ProgrammaService {\n  constructor(http) {\n    this.http = http;\n    this.programmaUrl = 'https://data.sportlink.com/programma?uit=NEE';\n    this.uitslagenUrl = 'https://data.sportlink.com/uitslagen?uit=NEE';\n  }\n  getProgramma(days) {\n    return this.http.get(this.programmaUrl + '&aantaldagen=' + days).pipe(tap(programma => programma.forEach(element => {\n      element.kast = element.kleedkamerthuisteam.indexOf('A') > 0 || element.kleedkamerthuisteam.indexOf('B') > 0 || element.kleedkameruitteam.indexOf('A') > 0 || element.kleedkameruitteam.indexOf('B') > 0;\n    })), tap(programma => programma.forEach(element => {\n      element.afgelast = element.status?.startsWith('Afgelast');\n    })), map(programma => programma.sort(this.sortWedstrijd)));\n  }\n  getUitslagen(days) {\n    return this.http.get(this.uitslagenUrl + '&aantaldagen=' + days);\n  }\n  sortWedstrijd(a, b) {\n    if (a.wedstrijddatum < b.wedstrijddatum) {\n      return -1;\n    }\n    if (a.wedstrijddatum > b.wedstrijddatum) {\n      return 1;\n    }\n    if (a.thuisteam < b.thuisteam) {\n      return -1;\n    }\n    if (a.thuisteam > b.thuisteam) {\n      return 1;\n    }\n    return 0;\n  }\n}, _class.ctorParameters = () => [{\n  type: HttpClient\n}], _class);\nProgrammaService = __decorate([Injectable({\n  providedIn: 'root'\n})], ProgrammaService);\nexport { ProgrammaService };","map":{"version":3,"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAGjD,SAASC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AAMlC,IAAMC,gBAAgB,aAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,iBAAY,GAAG,8CAA8C;IAC7D,iBAAY,GAAG,8CAA8C;EAG7D;EACAC,YAAYA,CAACC,IAAY;IACvB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,IAAI,CAACC,YAAY,GAAG,eAAe,GAAGF,IAAI,CAAC,CAACG,IAAI,CACjFR,GAAG,CAAES,SAAuB,IAAKA,SAAS,CAACC,OAAO,CAACC,OAAO,IAAG;MAC3DA,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACE,mBAAmB,CAACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IACtDH,OAAO,CAACE,mBAAmB,CAACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAC5CH,OAAO,CAACI,iBAAiB,CAACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAC1CH,OAAO,CAACI,iBAAiB,CAACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;IACjD,CAAC,CAAC,CAAC,EACHd,GAAG,CAAES,SAAuB,IAAKA,SAAS,CAACC,OAAO,CAACC,OAAO,IAAG;MAC3DA,OAAO,CAACK,QAAQ,GAAGL,OAAO,CAACM,MAAM,EAAEC,UAAU,CAAC,UAAU,CAAC;IAC3D,CAAC,CAAC,CAAC,EACHnB,GAAG,CAAEU,SAAuB,IAAKA,SAAS,CAACU,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC;EACzE;EAEAC,YAAYA,CAAChB,IAAY;IACvB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACgB,YAAY,GAAG,eAAe,GAAGjB,IAAI,CAAC;EAC9E;EAEAe,aAAaA,CAACG,CAAa,EAAEC,CAAa;IACxC,IAAID,CAAC,CAACE,cAAc,GAAGD,CAAC,CAACC,cAAc,EAAE;MACvC,OAAO,CAAC,CAAC;;IAEX,IAAIF,CAAC,CAACE,cAAc,GAAGD,CAAC,CAACC,cAAc,EAAE;MACvC,OAAO,CAAC;;IAEV,IAAIF,CAAC,CAACG,SAAS,GAAGF,CAAC,CAACE,SAAS,EAAE;MAC7B,OAAO,CAAC,CAAC;;IAEX,IAAIH,CAAC,CAACG,SAAS,GAAGF,CAAC,CAACE,SAAS,EAAE;MAC7B,OAAO,CAAC;;IAEV,OAAO,CAAC;EACV;;;;AAvCWzB,gBAAgB,eAH5BJ,UAAU,CAAC;EACV8B,UAAU,EAAE;CACb,CAAC,GACW1B,gBAAgB,CAwC5B;SAxCYA,gBAAgB","names":["Injectable","HttpClient","map","tap","ProgrammaService","constructor","http","getProgramma","days","get","programmaUrl","pipe","programma","forEach","element","kast","kleedkamerthuisteam","indexOf","kleedkameruitteam","afgelast","status","startsWith","sort","sortWedstrijd","getUitslagen","uitslagenUrl","a","b","wedstrijddatum","thuisteam","providedIn"],"sourceRoot":"","sources":["C:\\Sources\\Playground\\JongBrabant\\Kleedkamerscherm\\src\\app\\services\\programma.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IWedstrijd } from '../models/wedstrijd.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { IUitslag } from '../models/uitslag.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgrammaService {\r\n\r\n  programmaUrl = 'https://data.sportlink.com/programma?uit=NEE';\r\n  uitslagenUrl = 'https://data.sportlink.com/uitslagen?uit=NEE';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  getProgramma(days: number): Observable<IWedstrijd[]> {\r\n    return this.http.get<IWedstrijd[]>(this.programmaUrl + '&aantaldagen=' + days).pipe(\r\n      tap((programma: IWedstrijd[]) => programma.forEach(element => {\r\n        element.kast = element.kleedkamerthuisteam.indexOf('A') > 0\r\n          || element.kleedkamerthuisteam.indexOf('B') > 0\r\n          || element.kleedkameruitteam.indexOf('A') > 0\r\n          || element.kleedkameruitteam.indexOf('B') > 0;\r\n      })),\r\n      tap((programma: IWedstrijd[]) => programma.forEach(element => {\r\n        element.afgelast = element.status?.startsWith('Afgelast');\r\n      })),\r\n      map((programma: IWedstrijd[]) => programma.sort(this.sortWedstrijd)));\r\n  }\r\n\r\n  getUitslagen(days: number): Observable<IUitslag[]> {\r\n    return this.http.get<IUitslag[]>(this.uitslagenUrl + '&aantaldagen=' + days);\r\n  }\r\n\r\n  sortWedstrijd(a: IWedstrijd, b: IWedstrijd) {\r\n    if (a.wedstrijddatum < b.wedstrijddatum) {\r\n      return -1;\r\n    }\r\n    if (a.wedstrijddatum > b.wedstrijddatum) {\r\n      return 1;\r\n    }\r\n    if (a.thuisteam < b.thuisteam) {\r\n      return -1;\r\n    }\r\n    if (a.thuisteam > b.thuisteam) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}